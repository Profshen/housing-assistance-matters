var NATIONAL_VALUES = {"3004106":"2000", "3104458":"2013", "3285639":"2012", "3205087":"2006"}
var STATES = { "Alabama": "AL", "Alaska": "AK", "American Samoa": "AS", "Arizona": "AZ", "Arkansas": "AR", "California": "CA", "Colorado": "CO", "Connecticut": "CT", "Delaware": "DE", "District of Columbia": "DC", "Federated States Of Micronesia": "FM", "Florida": "FL", "Georgia": "GA", "Guam": "GU", "Hawaii": "HI", "Idaho": "ID", "Illinois": "IL", "Indiana": "IN", "Iowa": "IA", "Kansas": "KS", "Kentucky": "KY", "Louisiana": "LA", "Maine": "ME", "Marshall Islands": "MH", "Maryland": "MD", "Massachusetts": "MA", "Michigan": "MI", "Minnesota": "MN", "Mississippi": "MS", "Missouri": "MO", "Montana": "MT", "Nebraska": "NE", "Nevada": "NV", "New Hampshire": "NH", "New Jersey": "NJ", "New Mexico": "NM", "New York": "NY", "North Carolina": "NC", "North Dakota": "ND", "Northern Mariana Islands": "MP", "Ohio": "OH", "Oklahoma": "OK", "Oregon": "OR", "Palau": "PW", "Pennsylvania": "PA", "Puerto Rico": "PR", "Rhode Island": "RI", "South Carolina": "SC", "South Dakota": "SD", "Tennessee": "TN", "Texas": "TX", "Utah": "UT", "Vermont": "VT", "Virgin Islands": "VI", "Virginia": "VA", "Washington": "WA", "West Virginia": "WV", "Wisconsin": "WI", "WY": "Wyoming" }
//generated by manual filter of data file, then lowPop.py
var lowPops = {"Mississippi": ["Amite County", "Attala County", "Benton County", "Calhoun County", "Carroll County", "Chickasaw County", "Choctaw County", "Claiborne County", "Clarke County", "Franklin County", "Greene County", "Holmes County", "Humphreys County", "Issaquena County", "Jasper County", "Jefferson County", "Jefferson Davis County", "Kemper County", "Lawrence County", "Montgomery County", "Noxubee County", "Perry County", "Quitman County", "Sharkey County", "Smith County", "Stone County", "Tallahatchie County", "Tishomingo County", "Tunica County", "Walthall County", "Webster County", "Wilkinson County", "Winston County", "Yalobusha County"], "Oklahoma": ["Alfalfa County", "Atoka County", "Beaver County", "Blaine County", "Choctaw County", "Cimarron County", "Coal County", "Cotton County", "Craig County", "Dewey County", "Ellis County", "Grant County", "Greer County", "Harmon County", "Harper County", "Haskell County", "Hughes County", "Jefferson County", "Johnston County", "Kingfisher County", "Kiowa County", "Latimer County", "Love County", "Major County", "Marshall County", "Murray County", "Noble County", "Nowata County", "Okfuskee County", "Pawnee County", "Pushmataha County", "Roger Mills County", "Tillman County", "Washita County", "Woods County"], "Wyoming": ["Big Horn County", "Carbon County", "Converse County", "Crook County", "Goshen County", "Hot Springs County", "Johnson County", "Lincoln County", "Niobrara County", "Platte County", "Sublette County", "Washakie County", "Weston County"], "Minnesota": ["Aitkin County", "Big Stone County", "Chippewa County", "Clearwater County", "Cook County", "Cottonwood County", "Faribault County", "Grant County", "Houston County", "Jackson County", "Kanabec County", "Kittson County", "Koochiching County", "Lac qui Parle County", "Lake County", "Lake of the Woods County", "Lincoln County", "Mahnomen County", "Marshall County", "Murray County", "Norman County", "Pennington County", "Pipestone County", "Pope County", "Red Lake County", "Redwood County", "Renville County", "Rock County", "Roseau County", "Sibley County", "Stevens County", "Swift County", "Traverse County", "Wadena County", "Waseca County", "Watonwan County", "Wilkin County", "Yellow Medicine County"], "Illinois": ["Alexander County", "Bond County", "Brown County", "Calhoun County", "Carroll County", "Cass County", "Clark County", "Clay County", "Crawford County", "Cumberland County", "De Witt County", "Douglas County", "Edgar County", "Edwards County", "Ford County", "Gallatin County", "Greene County", "Hamilton County", "Hancock County", "Hardin County", "Henderson County", "Jasper County", "Johnson County", "Lawrence County", "Marshall County", "Mason County", "Massac County", "Menard County", "Mercer County", "Moultrie County", "Piatt County", "Pike County", "Pope County", "Pulaski County", "Putnam County", "Richland County", "Schuyler County", "Scott County", "Stark County", "Union County", "Wabash County", "Warren County", "Washington County", "Wayne County", "White County"], "Arkansas": ["Arkansas County", "Bradley County", "Calhoun County", "Chicot County", "Clay County", "Cleveland County", "Cross County", "Dallas County", "Desha County", "Drew County", "Franklin County", "Fulton County", "Grant County", "Howard County", "Izard County", "Jackson County", "Lafayette County", "Lawrence County", "Lee County", "Lincoln County", "Little River County", "Madison County", "Marion County", "Monroe County", "Montgomery County", "Nevada County", "Newton County", "Perry County", "Pike County", "Prairie County", "Randolph County", "Scott County", "Searcy County", "Sevier County", "Sharp County", "Stone County", "Van Buren County", "Woodruff County", "Alpine County", "Inyo County", "Mariposa County", "Modoc County", "Mono County", "Plumas County", "Sierra County", "Trinity County"], "New Mexico": ["Catron County", "Colfax County", "De Baca County", "Guadalupe County", "Harding County", "Hidalgo County", "Los Alamos County", "Mora County", "Quay County", "Sierra County", "Socorro County", "Torrance County", "Union County"], "Indiana": ["Benton County", "Blackford County", "Brown County", "Crawford County", "Fountain County", "Martin County", "Newton County", "Ohio County", "Orange County", "Parke County", "Perry County", "Pike County", "Pulaski County", "Rush County", "Switzerland County", "Tipton County", "Union County", "Vermillion County", "Warren County"], "Texas": ["Andrews County", "Archer County", "Armstrong County", "Bailey County", "Baylor County", "Blanco County", "Borden County", "Bosque County", "Brewster County", "Briscoe County", "Brooks County", "Burleson County", "Callahan County", "Camp County", "Carson County", "Castro County", "Childress County", "Clay County", "Cochran County", "Coke County", "Coleman County", "Collingsworth County", "Comanche County", "Concho County", "Cottle County", "Crane County", "Crockett County", "Crosby County", "Culberson County", "Dallam County", "Dawson County", "Deaf Smith County", "Delta County", "Dickens County", "Dimmit County", "Donley County", "Duval County", "Eastland County", "Edwards County", "Falls County", "Fisher County", "Floyd County", "Foard County", "Franklin County", "Freestone County", "Frio County", "Gaines County", "Garza County", "Glasscock County", "Goliad County", "Hall County", "Hamilton County", "Hansford County", "Hardeman County", "Hartley County", "Haskell County", "Hemphill County", "Hudspeth County", "Irion County", "Jack County", "Jackson County", "Jeff Davis County", "Jim Hogg County", "Karnes County", "Kenedy County", "Kent County", "Kimble County", "King County", "Kinney County", "Knox County", "Lamb County", "La Salle County", "Lavaca County", "Lee County", "Leon County", "Lipscomb County", "Live Oak County", "Llano County", "Loving County", "Lynn County", "McCulloch County", "McMullen County", "Madison County", "Marion County", "Martin County", "Mason County", "Menard County", "Mills County", "Mitchell County", "Montague County", "Morris County", "Motley County", "Newton County", "Nolan County", "Ochiltree County", "Oldham County", "Parmer County", "Pecos County", "Presidio County", "Rains County", "Reagan County", "Real County", "Red River County", "Reeves County", "Refugio County", "Roberts County", "Robertson County", "Runnels County", "Sabine County", "San Augustine County", "San Saba County", "Schleicher County", "Scurry County", "Shackelford County", "Sherman County", "Somervell County", "Stephens County", "Sterling County", "Stonewall County", "Sutton County", "Swisher County", "Terrell County", "Terry County", "Throckmorton County", "Trinity County", "Upton County", "Ward County", "Wheeler County", "Wilbarger County", "Winkler County", "Yoakum County", "Young County", "Zapata County", "Zavala County"], "Louisiana": ["Bienville Parish", "Caldwell Parish", "Cameron Parish", "Catahoula Parish", "Claiborne Parish", "East Carroll Parish", "Jackson Parish", "LaSalle Parish", "Madison Parish", "Red River Parish", "St. Helena Parish", "Tensas Parish", "West Carroll Parish", "West Feliciana Parish", "Winn Parish"], "Idaho": ["Adams County", "Bear Lake County", "Benewah County", "Boise County", "Boundary County", "Butte County", "Camas County", "Caribou County", "Clark County", "Clearwater County", "Custer County", "Franklin County", "Fremont County", "Gem County", "Gooding County", "Idaho County", "Lemhi County", "Lewis County", "Lincoln County", "Oneida County", "Owyhee County", "Power County", "Shoshone County", "Teton County", "Valley County", "Washington County"], "Tennessee": ["Benton County", "Bledsoe County", "Cannon County", "Chester County", "Clay County", "Crockett County", "Decatur County", "DeKalb County", "Fentress County", "Grundy County", "Hancock County", "Haywood County", "Houston County", "Humphreys County", "Jackson County", "Johnson County", "Lake County", "Lewis County", "Meigs County", "Moore County", "Perry County", "Pickett County", "Polk County", "Sequatchie County", "Smith County", "Stewart County", "Trousdale County", "Unicoi County", "Union County", "Van Buren County", "Wayne County"], "Arizona": ["Greenlee County"], "Iowa": ["Adair County", "Adams County", "Allamakee County", "Appanoose County", "Audubon County", "Butler County", "Calhoun County", "Cass County", "Cedar County", "Cherokee County", "Chickasaw County", "Clarke County", "Clay County", "Clayton County", "Crawford County", "Davis County", "Decatur County", "Delaware County", "Dickinson County", "Emmet County", "Floyd County", "Franklin County", "Fremont County", "Greene County", "Grundy County", "Guthrie County", "Hamilton County", "Hancock County", "Hardin County", "Harrison County", "Howard County", "Humboldt County", "Ida County", "Iowa County", "Jefferson County", "Keokuk County", "Kossuth County", "Louisa County", "Lucas County", "Lyon County", "Madison County", "Mills County", "Mitchell County", "Monona County", "Monroe County", "Montgomery County", "O'Brien County", "Osceola County", "Page County", "Palo Alto County", "Pocahontas County", "Poweshiek County", "Ringgold County", "Sac County", "Shelby County", "Tama County", "Taylor County", "Union County", "Van Buren County", "Wayne County", "Winnebago County", "Worth County", "Wright County"], "Michigan": ["Alcona County", "Alger County", "Arenac County", "Baraga County", "Benzie County", "Crawford County", "Gogebic County", "Iron County", "Kalkaska County", "Keweenaw County", "Lake County", "Luce County", "Mackinac County", "Missaukee County", "Montmorency County", "Ontonagon County", "Oscoda County", "Presque Isle County", "Schoolcraft County"], "Kansas": ["Allen County", "Anderson County", "Atchison County", "Barber County", "Bourbon County", "Brown County", "Chase County", "Chautauqua County", "Cheyenne County", "Clark County", "Clay County", "Cloud County", "Coffey County", "Comanche County", "Decatur County", "Dickinson County", "Doniphan County", "Edwards County", "Elk County", "Ellsworth County", "Gove County", "Graham County", "Grant County", "Gray County", "Greeley County", "Greenwood County", "Hamilton County", "Harper County", "Haskell County", "Hodgeman County", "Jackson County", "Jefferson County", "Jewell County", "Kearny County", "Kingman County", "Kiowa County", "Lane County", "Lincoln County", "Linn County", "Logan County", "Marion County", "Marshall County", "Meade County", "Mitchell County", "Morris County", "Morton County", "Nemaha County", "Neosho County", "Ness County", "Norton County", "Osage County", "Osborne County", "Ottawa County", "Pawnee County", "Phillips County", "Pratt County", "Rawlins County", "Republic County", "Rice County", "Rooks County", "Rush County", "Russell County", "Scott County", "Sheridan County", "Sherman County", "Smith County", "Stafford County", "Stanton County", "Stevens County", "Thomas County", "Trego County", "Wabaunsee County", "Wallace County", "Washington County", "Wichita County", "Wilson County", "Woodson County"], "Utah": ["Beaver County", "Daggett County", "Emery County", "Garfield County", "Grand County", "Juab County", "Kane County", "Millard County", "Morgan County", "Piute County", "Rich County", "San Juan County", "Wayne County"], "Virginia": ["Alleghany County", "Amelia County", "Appomattox County", "Bath County", "Bland County", "Brunswick County", "Buckingham County", "Charles City County", "Charlotte County", "Clarke County", "Craig County", "Cumberland County", "Dickenson County", "Essex County", "Floyd County", "Giles County", "Grayson County", "Greene County", "Greensville County", "Highland County", "King and Queen County", "King William County", "Lancaster County", "Lunenburg County", "Madison County", "Mathews County", "Middlesex County", "Nelson County", "New Kent County", "Northampton County", "Northumberland County", "Nottoway County", "Patrick County", "Rappahannock County", "Richmond County", "Southampton County", "Surry County", "Sussex County", "Westmoreland County", "Bedford city", "Bristol city", "Buena Vista city", "Colonial Heights city", "Covington city", "Emporia city", "Falls Church city", "Franklin city", "Galax city", "Lexington city", "Manassas Park city", "Martinsville city", "Norton city", "Poquoson city", "Radford city", "Williamsburg city"], "Oregon": ["Baker County", "Gilliam County", "Grant County", "Harney County", "Lake County", "Morrow County", "Sherman County", "Wallowa County", "Wheeler County"], "Montana": ["Beaverhead County", "Big Horn County", "Blaine County", "Broadwater County", "Carbon County", "Carter County", "Chouteau County", "Custer County", "Daniels County", "Dawson County", "Deer Lodge County", "Fallon County", "Fergus County", "Garfield County", "Glacier County", "Golden Valley County", "Granite County", "Hill County", "Jefferson County", "Judith Basin County", "Liberty County", "Lincoln County", "McCone County", "Madison County", "Meagher County", "Mineral County", "Musselshell County", "Park County", "Petroleum County", "Phillips County", "Pondera County", "Powder River County", "Powell County", "Prairie County", "Richland County", "Roosevelt County", "Rosebud County", "Sanders County", "Sheridan County", "Stillwater County", "Sweet Grass County", "Teton County", "Toole County", "Treasure County", "Valley County", "Wheatland County", "Wibaux County"], "Massachusetts": ["Dukes County", "Nantucket County"], "West Virginia": ["Barbour County", "Braxton County", "Calhoun County", "Clay County", "Doddridge County", "Gilmer County", "Grant County", "Hardy County", "Lewis County", "Monroe County", "Morgan County", "Pendleton County", "Pleasants County", "Pocahontas County", "Ritchie County", "Roane County", "Summers County", "Taylor County", "Tucker County", "Tyler County", "Webster County", "Wetzel County", "Wirt County"], "South Carolina": ["Allendale County", "Bamberg County", "Calhoun County", "Lee County", "McCormick County"], "Wisconsin": ["Ashland County", "Bayfield County", "Buffalo County", "Burnett County", "Crawford County", "Florence County", "Forest County", "Green Lake County", "Iron County", "Lafayette County", "Marquette County", "Menominee County", "Pepin County", "Price County", "Richland County", "Rusk County", "Sawyer County", "Washburn County"], "Vermont": ["Essex County", "Grand Isle County"], "Georgia": ["Atkinson County", "Bacon County", "Baker County", "Banks County", "Ben Hill County", "Berrien County", "Bleckley County", "Brantley County", "Brooks County", "Calhoun County", "Candler County", "Charlton County", "Chattahoochee County", "Clay County", "Clinch County", "Cook County", "Crawford County", "Dade County", "Dooly County", "Early County", "Echols County", "Evans County", "Glascock County", "Greene County", "Hancock County", "Heard County", "Irwin County", "Jasper County", "Jeff Davis County", "Jefferson County", "Jenkins County", "Johnson County", "Lamar County", "Lanier County", "Lincoln County", "Long County", "McIntosh County", "Macon County", "Marion County", "Miller County", "Montgomery County", "Morgan County", "Oglethorpe County", "Pierce County", "Pike County", "Pulaski County", "Quitman County", "Rabun County", "Randolph County", "Schley County", "Screven County", "Seminole County", "Stewart County", "Talbot County", "Taliaferro County", "Taylor County", "Telfair County", "Terrell County", "Towns County", "Treutlen County", "Turner County", "Twiggs County", "Warren County", "Webster County", "Wheeler County", "Wilcox County", "Wilkes County", "Wilkinson County"], "North Dakota": ["Adams County", "Barnes County", "Benson County", "Billings County", "Bottineau County", "Bowman County", "Burke County", "Cavalier County", "Dickey County", "Divide County", "Dunn County", "Eddy County", "Emmons County", "Foster County", "Golden Valley County", "Grant County", "Griggs County", "Hettinger County", "Kidder County", "LaMoure County", "Logan County", "McHenry County", "McIntosh County", "McKenzie County", "McLean County", "Mercer County", "Mountrail County", "Nelson County", "Oliver County", "Pembina County", "Pierce County", "Ramsey County", "Ransom County", "Renville County", "Richland County", "Rolette County", "Sargent County", "Sheridan County", "Sioux County", "Slope County", "Steele County", "Towner County", "Traill County", "Walsh County", "Wells County"], "Pennsylvania": ["Cameron County", "Forest County", "Fulton County", "Montour County", "Potter County", "Sullivan County"], "Florida": ["Calhoun County", "Dixie County", "Franklin County", "Gilchrist County", "Glades County", "Gulf County", "Hamilton County", "Holmes County", "Jefferson County", "Lafayette County", "Liberty County", "Madison County", "Union County", "Appling County"], "Alaska": ["Aleutians East Borough", "Aleutians West Census Area", "Bethel Census Area", "Bristol Bay Borough", "Denali Borough", "Dillingham Census Area", "Haines Borough", "Kodiak Island Borough", "Lake and Peninsula Borough", "Nome Census Area", "North Slope Borough", "Northwest Arctic Borough", "Sitka City and Borough", "Southeast Fairbanks Census Area", "Valdez-Cordova Census Area", "Wade Hampton Census Area", "Yakutat City and Borough", "Yukon-Koyukuk Census Area"], "Kentucky": ["Adair County", "Ballard County", "Bath County", "Bourbon County", "Bracken County", "Breathitt County", "Butler County", "Caldwell County", "Carlisle County", "Carroll County", "Casey County", "Clinton County", "Crittenden County", "Cumberland County", "Edmonson County", "Elliott County", "Estill County", "Fleming County", "Fulton County", "Gallatin County", "Garrard County", "Green County", "Hancock County", "Harrison County", "Hart County", "Henry County", "Hickman County", "Jackson County", "Knott County", "Larue County", "Lawrence County", "Lee County", "Leslie County", "Lewis County", "Livingston County", "Lyon County", "McCreary County", "McLean County", "Magoffin County", "Martin County", "Mason County", "Menifee County", "Metcalfe County", "Monroe County", "Morgan County", "Nicholas County", "Owen County", "Owsley County", "Pendleton County", "Powell County", "Robertson County", "Rockcastle County", "Russell County", "Simpson County", "Spencer County", "Todd County", "Trigg County", "Trimble County", "Union County", "Washington County", "Webster County", "Wolfe County"], "Hawaii": ["Kalawao County"], "Nebraska": ["Antelope County", "Arthur County", "Banner County", "Blaine County", "Boone County", "Box Butte County", "Boyd County", "Brown County", "Burt County", "Butler County", "Cedar County", "Chase County", "Cherry County", "Cheyenne County", "Clay County", "Colfax County", "Cuming County", "Custer County", "Dawes County", "Deuel County", "Dixon County", "Dundy County", "Fillmore County", "Franklin County", "Frontier County", "Furnas County", "Garden County", "Garfield County", "Gosper County", "Grant County", "Greeley County", "Hamilton County", "Harlan County", "Hayes County", "Hitchcock County", "Holt County", "Hooker County", "Howard County", "Jefferson County", "Johnson County", "Kearney County", "Keith County", "Keya Paha County", "Kimball County", "Knox County", "Logan County", "Loup County", "McPherson County", "Merrick County", "Morrill County", "Nance County", "Nemaha County", "Nuckolls County", "Otoe County", "Pawnee County", "Perkins County", "Phelps County", "Pierce County", "Polk County", "Red Willow County", "Richardson County", "Rock County", "Saline County", "Seward County", "Sheridan County", "Sherman County", "Sioux County", "Stanton County", "Thayer County", "Thomas County", "Thurston County", "Valley County", "Wayne County", "Webster County", "Wheeler County", "York County"], "Missouri": ["Andrew County", "Atchison County", "Barton County", "Bates County", "Benton County", "Bollinger County", "Caldwell County", "Carroll County", "Carter County", "Cedar County", "Chariton County", "Clark County", "Cooper County", "Dade County", "Dallas County", "Daviess County", "DeKalb County", "Dent County", "Douglas County", "Gasconade County", "Gentry County", "Grundy County", "Harrison County", "Hickory County", "Holt County", "Howard County", "Iron County", "Knox County", "Lewis County", "Linn County", "Livingston County", "Macon County", "Madison County", "Maries County", "Mercer County", "Mississippi County", "Moniteau County", "Monroe County", "Montgomery County", "New Madrid County", "Oregon County", "Osage County", "Ozark County", "Pemiscot County", "Perry County", "Pike County", "Putnam County", "Ralls County", "Reynolds County", "Ripley County", "St. Clair County", "Ste. Genevieve County", "Schuyler County", "Scotland County", "Shannon County", "Shelby County", "Sullivan County", "Wayne County", "Worth County", "Wright County"], "Ohio": ["Harrison County", "Monroe County", "Morgan County", "Noble County", "Paulding County", "Vinton County"], "Alabama": ["Bullock County", "Choctaw County", "Clay County", "Cleburne County", "Conecuh County", "Coosa County", "Crenshaw County", "Fayette County", "Greene County", "Hale County", "Henry County", "Lamar County", "Lowndes County", "Perry County", "Pickens County", "Sumter County", "Washington County", "Wilcox County"], "South Dakota": ["Aurora County", "Beadle County", "Bennett County", "Bon Homme County", "Brule County", "Buffalo County", "Butte County", "Campbell County", "Charles Mix County", "Clark County", "Clay County", "Corson County", "Custer County", "Davison County", "Day County", "Deuel County", "Dewey County", "Douglas County", "Edmunds County", "Fall River County", "Faulk County", "Grant County", "Gregory County", "Haakon County", "Hamlin County", "Hand County", "Hanson County", "Harding County", "Hughes County", "Hutchinson County", "Hyde County", "Jackson County", "Jerauld County", "Jones County", "Kingsbury County", "Lake County", "Lyman County", "McCook County", "McPherson County", "Marshall County", "Mellette County", "Miner County", "Moody County", "Perkins County", "Potter County", "Roberts County", "Sanborn County", "Shannon County", "Spink County", "Stanley County", "Sully County", "Todd County", "Tripp County", "Turner County", "Union County", "Walworth County", "Ziebach County"], "Colorado": ["Alamosa County", "Archuleta County", "Baca County", "Bent County", "Chaffee County", "Cheyenne County", "Clear Creek County", "Conejos County", "Costilla County", "Crowley County", "Custer County", "Dolores County", "Gilpin County", "Grand County", "Gunnison County", "Hinsdale County", "Huerfano County", "Jackson County", "Kiowa County", "Kit Carson County", "Lake County", "Las Animas County", "Lincoln County", "Mineral County", "Moffat County", "Otero County", "Ouray County", "Park County", "Phillips County", "Pitkin County", "Prowers County", "Rio Blanco County", "Rio Grande County", "Saguache County", "San Juan County", "San Miguel County", "Sedgwick County", "Washington County", "Yuma County"], "Washington": ["Adams County", "Columbia County", "Ferry County", "Garfield County", "Lincoln County", "Pend Oreille County", "San Juan County", "Skamania County", "Wahkiakum County"], "North Carolina": ["Alleghany County", "Avery County", "Camden County", "Chowan County", "Clay County", "Gates County", "Graham County", "Hyde County", "Jones County", "Mitchell County", "Pamlico County", "Perquimans County", "Swain County", "Tyrrell County", "Washington County", "Yancey County"], "New York": ["Hamilton County", "Schuyler County"], "Nevada": ["Esmeralda County", "Eureka County", "Humboldt County", "Lander County", "Lincoln County", "Mineral County", "Pershing County", "Storey County", "White Pine County"], "Maine": ["Piscataquis County"]}
var BAR_WIDTH = 100
var comma = d3.format(",f")
var dollar = d3.format("$,")

if (!Array.prototype.filter) {
  Array.prototype.filter = function(fun/*, thisArg*/) {
    'use strict';

    if (this === void 0 || this === null) {
      throw new TypeError();
    }

    var t = Object(this);
    var len = t.length >>> 0;
    if (typeof fun !== 'function') {
      throw new TypeError();
    }

    var res = [];
    var thisArg = arguments.length >= 2 ? arguments[1] : void 0;
    for (var i = 0; i < len; i++) {
      if (i in t) {
        var val = t[i];

        // NOTE: Technically this should Object.defineProperty at
        //       the next index, as push can be affected by
        //       properties on Object.prototype and Array.prototype.
        //       But that method's new, and collisions should be
        //       rare, so use the more-compatible alternative.
        if (fun.call(thisArg, val, i, t)) {
          res.push(val);
        }
      }
    }

    return res;
  };
}


function getUrlVars()
{
    var vars = [], hash;
    var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
    for(var i = 0; i < hashes.length; i++)
    {
        hash = hashes[i].split('=');
        vars.push(hash[0]);
        var val;
        if(hash[0] == "fips"){
        	val = hash[1].split(",")
        }else{ val = hash[1]}
        vars[hash[0]] = val;
    }
    return vars;
}

function drawGraphic(containerWidth){
	var params = getUrlVars();
	var fips = params.fips
	var width = 600;
	var height = 300;
	var margin = {left:50, right:30, top:80, bottom: 30}
	var quantize = d3.scale.quantize()
		.domain([0, 100])
		.range(d3.range(9).map(function(i) { return "q" + i + "-9"; }));
	var COLORS = 
		{
			"q0-9": "rgb(247,251,255)",
			"q1-9": "rgb(222,235,247)",
			"q2-9": "rgb(198,219,239)",
			"q3-9": "rgb(158,202,225)",
			"q4-9": "rgb(107,174,214)",
			"q5-9": "rgb(66,146,198)",
			"q6-9": "rgb(33,113,181)",
			"q7-9": "rgb(8,81,156)",
			"q8-9": "rgb(8,48,107)"
		}
    
	d3.json("data/data.json", function(error, us) {
		var data = topojson.feature(us, us.objects.UScounties).features.filter(function(obj){ return fips.indexOf(""+obj.id) != -1})
		var containers = d3.select("body")
			.selectAll("div")
			.data(data)
			.enter()
			.append("div")
			.attr("class","scatter container")
		var head = containers.append("div")
						.attr("class","head")
		head.append("img")
			.attr("src","images/logo-detail.png")
		head.append("span")
			.text("MAPPING AMERICA’S RENTAL HOUSING CRISIS")

		containers.append("h2")
			.text(function(d){ return d.properties.name  + ", " + STATES[d.properties.STATE_NAME]})

		containers.append("h3")
		.html(function(d){
			if(d.properties.flagged == "1"){
				return "(<span>Also included in area</span>: " + String(lowPops[d.properties.STATE_NAME]).replace(/,/g,", ") + ")"
			}
		})

		containers.append("div")
		.attr("class","caveat")
		.text(function(d){
			if(d.properties.flagged == "1"){
				return "This area represents all counties in the state with fewer than 20,000 people according to the 2010-2014 4-year American Community Survey sample."
			}
		})


		// var x = d3.scale.linear()
		// 		.range([margin.left,width-margin.left])
		// 		.domain([1999.5,2013.5])
		var REMAP = {"2000" : "2000", "2006": "2005 — '09", "2013":"2010 — '14"}
		var x = d3.scale.ordinal()
    		.rangeRoundBands([0, width], .4)
    		.domain([2000,"2005 — '09","2010 — '14"]);
		var y = d3.scale.linear()
				.range([height-margin.bottom,margin.bottom])
				.domain([0,100])
		var years = [2000,2006,2013]
		// var line = d3.svg.line()
	 //    	.x(function(d) { return x(d.date); })
	 //    	.y(function(d) { return y(d.close); });

	 // console.log(data)

		var xAxis = d3.svg.axis()
		    .scale(x)
		    .orient("bottom")
		    .tickValues([2000,"2005 — '09","2010 — '14"])
		    // .tickFormat(d3.format("0"))
		    .outerTickSize(0);

		var yAxis = d3.svg.axis()
		    .scale(y)
		    .tickValues([20,40,60,80,100])
		    .orient("left")
		    .ticks(5);

		var svg = containers.append("svg")
				.attr("height",height + margin.top)
				.attr("width",width)
				.append("g")

		// for(var t= 1; t <= 5; t++){
		// 	svg.append("line")
		// 		.attr("class", "grid-line")
		// 		.attr("x1", x(2))
		// 		.attr("x2", x(2013.5))
		// 		.attr("y1", y(t*20))
		// 		.attr("y2", y(t*20));
		// }
		svg.append("g")
		      .attr("class", "x axis")
		      .attr("transform", "translate(0," + (height-margin.bottom+margin.top) + ")")
		      .call(xAxis);

		svg.append("g")
		      .attr("class", "y axis")
		      .attr("transform", "translate(" + margin.left + "," + margin.top + ")")
		      .call(yAxis)
		    .append("text")
		      .attr("transform", "rotate(-90)")
		      .attr("y", 6)
		      .attr("dy", ".71em")
		      .style("text-anchor", "end")

		for(var i = 0; i < years.length; i++){
			// if(i < (years.length - 1)){
			// 	svg.append("line")
			// 		.attr("class", "asst line")
			// 		.attr("x1", x(years[i]))
			// 		.attr("x2", x(years[i+1]))
			// 		.attr("y1", function(d){ return y(d.properties["asst" + years[i]])})
			// 		.attr("y2", function(d){ return y(d.properties["asst" + years[i+1]])})

			// 	svg.append("line")
			// 		.attr("class", "noAsst line")
			// 		.attr("x1", x(years[i]))
			// 		.attr("x2", x(years[i+1]))
			// 		.attr("y1", function(d){ return y(d.properties["noAsst" + years[i]])})
			// 		.attr("y2", function(d){ return y(d.properties["noAsst" + years[i+1]])})

			// }
			svg.append("rect")
				.attr("class", "usdaOnhudOn legend")
				.attr("x", 50)
				.attr("y", 0)
				.attr("width", 15)
				.attr("height", 15)
			svg.append("text")
				.text("Units per 100 ELI households with no assistance")
				.attr("x",70)
				.attr("y",13)

			// svg.append("rect")
			// 	.attr("class", "usdaOffhudOn legend")
			// 	.attr("x", 250)
			// 	.attr("y", 0)
			// 	.attr("width", 15)
			// 	.attr("height", 15)
			// svg.append("text")
			// 	.text("Units per 100 ELI households without USDA assistance")
			// 	.attr("x",270)
			// 	.attr("y",13)

			svg.append("rect")
				.attr("class", "usdaOffhudOn legend")
				.attr("x", 50)
				.attr("y", 30)
				.attr("width", 15)
				.attr("height", 15)
			svg.append("text")
				.text("Units per 100 ELI households")
				.attr("x",70)
				.attr("y",43)
			svg.append("text")
				.text("with USDA assistance")
				.attr("x",70)
				.attr("y",59)

			svg.append("rect")
				.attr("class", "usdaOnhudOff legend")
				.attr("x", 250)
				.attr("y", 30)
				.attr("width", 15)
				.attr("height", 15)
			svg.append("text")
				.text("Units per 100 ELI households")
				.attr("x",270)
				.attr("y",43)
			svg.append("text")
				.text("with HUD assistance")
				.attr("x",270)
				.attr("y",59)



			svg.append("rect")
				.attr("class","usdaOnhudOn bar y" + REMAP[years[i]])
				.attr("x", x(REMAP[years[i]]))
				.attr("y", function(d) { return y(d.properties["usdaOnhudOn" + years[i]]) })
				.attr("width", x.rangeBand())
				.attr("height", function(d){ return height - margin.bottom - y(d.properties["usdaOnhudOn" + years[i]])})

			svg.append("rect")
				.attr("class","usdaOffhudOn bar y" + REMAP[years[i]])
				.attr("x", x(REMAP[years[i]]))
				.attr("y", function(d) { return y(parseFloat(d.properties["usdaOnhudOn" + years[i]]))})
				.attr("width", x.rangeBand())
				.attr("height", function(d){ return height - margin.bottom - y(d.properties["usdaOnhudOn" + years[i]] - d.properties["usdaOffhudOn" + years[i]])})

			svg.append("rect")
				.attr("class","usdaOnhudOff bar y" + REMAP[years[i]])
				.attr("x", x(REMAP[years[i]]))
				.attr("y", function(d) { return y(parseFloat(d.properties["usdaOffhudOn" + years[i]])) })
				.attr("width", x.rangeBand())
				.attr("height", function(d){ return height - margin.bottom - y(d.properties["usdaOnhudOn" + years[i]] - d.properties["usdaOnhudOff" + years[i]])})

			svg.selectAll(".bar")
				.attr("transform", "translate(0," + (margin.top) + ")")


		}
		containers.append("div")
			.attr("class", "subtitle	")
			.text("The following data examine extremely low-income renter households (ELI households) and the number of adequate, affordable, and available rental units (units).")
		for(var i=0; i<data.length;i++){
			var d = data[i]
			var c = d3.select(containers[0][i])
			var table = c.append("table")
			headers = table.append("tr")
			headers.append("th")
				.html("Year")
	 		headers.append("th")
				.html("ELI households")
			headers.append("th")
				.html("Units")
	 		headers.append("th")
				.html("Gap between ELI households and units")
	 		headers.append("th")
				.html("Units serving ELI households with HUD assistance")
	 		headers.append("th")
				.html("Units serving ELI households with USDA assistance")
	 		headers.append("th")
				.html("Units serving ELI households with no assistance")
	 		headers.append("th")
				.html("Units per 100 ELI households with HUD assistance")
	 		headers.append("th")
				.html("Units per 100 ELI households with USDA assistance")
	 		headers.append("th")
				.html("Units per 100 ELI households with no assistance")


			row2000 = table.append("tr")
			row2000.append("td")
				.html("2000")
			row2000.append("td")
				.html(comma(d.properties.totalPop2000))
			row2000.append("td")
				.html(comma(d.properties.usdaOnhudOnNum2000))
			row2000.append("td")
				.html(comma(parseFloat(d.properties.totalPop2000)-parseFloat(d.properties.usdaOnhudOnNum2000)))
			row2000.append("td")
				.html(comma(d.properties.usdaOnhudOnNum2000))
			row2000.append("td")
				.html(comma(d.properties.usdaOnhudOn2000))
			row2000.append("td")
				.html(comma(d.properties.usdaOnhudOff2000))
			row2000.append("td")
				.html("*")
			row2000.append("td")
				.html("*")
			row2000.append("td")
				.html("*")


			row2006 = table.append("tr")
			row2006.append("td")
				.html("2006&ndash;'08")
			row2006.append("td")
				.html(comma(d.properties.totalPop2006))
			row2006.append("td")
				.html(comma(d.properties.usdaOnhudOnNum2006))
			row2006.append("td")
				.html(comma(parseFloat(d.properties.totalPop2006)-parseFloat(d.properties.usdaOnhudOnNum2006)))
			row2006.append("td")
				.html(comma(d.properties.hud2006))
			row2006.append("td")
				.html(comma(d.properties.usda2006))
			row2006.append("td")
				.html(comma(d.properties.usdaOffhudOffNum2006))
			row2006.append("td")
				.html(comma(d.properties.usdaOnhudOn2006 - d.properties.usdaOnhudOff2006))
			row2006.append("td")
				.html(comma(d.properties.usdaOnhudOn2006 - d.properties.usdaOffhudOn2006))
			row2006.append("td")
				.html(comma(d.properties.usdaOffhudOff2006))

			row2013 = table.append("tr")
			row2013.append("td")
				.html("2013&ndash;'08")
			row2013.append("td")
				.html(comma(d.properties.totalPop2013))
			row2013.append("td")
				.html(comma(d.properties.usdaOnhudOnNum2013))
			row2013.append("td")
				.html(comma(parseFloat(d.properties.totalPop2013)-parseFloat(d.properties.usdaOnhudOnNum2013)))
			row2013.append("td")
				.html(comma(d.properties.hud2013))
			row2013.append("td")
				.html(comma(d.properties.usda2013))
			row2013.append("td")
				.html(comma(d.properties.usdaOffhudOffNum2013))
			row2013.append("td")
				.html(comma(d.properties.usdaOnhudOn2013 - d.properties.usdaOnhudOff2013))
			row2013.append("td")
				.html(comma(d.properties.usdaOnhudOn2013 - d.properties.usdaOffhudOn2013))
			row2013.append("td")
				.html(comma(d.properties.usdaOffhudOff2013))

			if(d.properties.flagged == "1"){
				c.append("div")
					.attr("class", "footnote")
					.html("* Extremely low-income households earn no more than 30 percent of the area median income. In these counties, the income cutoff for a household of four ranged from " + dollar(d.properties.minELI2000) + "&ndash;" + dollar(d.properties.maxELI2000) + " in 2000, " + dollar(d.properties.minELI2006) + "&ndash;" + dollar(d.properties.maxELI2006) + " in 2009, and " + dollar(d.properties.minELI2013) + "&ndash;" + dollar(d.properties.maxELI2013) + " in 2014.")

			}else{
				c.append("div")
					.attr("class", "footnote")
					.text("* Extremely low-income households earn no more than 30 percent of the area median income. In this county, the income cutoff for a household of four was " + dollar(d.properties.ami2000) + " in 2000, " + dollar(d.properties.ami2006) + " in 2009, and " + dollar(d.properties.ami2013) + " in 2014.")
			}


		}	
		// var heads =["Total ELI renters","dolla dolla bills yall", "AAA units", "gap", "AAA units (asst off)", "Units per 100 renters", "Units per 100 renters (asst off)"]
		
// 		for(var y = 0; y < years.length; y++){
// 			var year = years[y]
// 			d3.csv("data/source/HAI_commsoutput_" + year + ".csv")
// 			    .row(function(d) {
// 			    	var r = {};
// 			    	var vals = {}
// 			    	for(var h = 0; h<heads.length; h++){
// 			    		vals[heads[h]] = d[heads[h]]
// 			    	}
// 			    	r[d.county] = vals;
// 			    	return r;
// 			    })
// 			    .get(function(error, rows) {
// 	  		      var row = table.append("tr")
// //This is the hackiest nonsense EVER. So bc of async stuff, year isn't being tracked in this func, so instead of modifying the csv source file (to add a "year" column)
// //I have an global obj w/ the value by year of "AAA units"...if data updates this needs to update...ugh
// 				  row.append("td")
// 					.text(NATIONAL_VALUES[rows[0]["National"]["AAA units"]])
// 				for(var j = 0; j<heads.length; j++){
// 				  row.append("td")
// 				  	.text(function(d){
// 				      var test = rows.filter(function(obj){
// 				      	return Object.keys(obj)[0] == d.id;
// 		 		      });
// 		 		      return test[0][d.id][heads[j]]
// 				   })
// 				  .attr("class", function(){
// 				  	if(heads[j] == "Units per 100 renters"){ return "asst"}
// 				  	else if(heads[j] == "Units per 100 renters (asst off)"){ return "noAsst"}
// 				  	else{ return ""}
// 				  })
// 				 }
// 			    });
// 		}

		// row2000 = table.append("tr")
		// row2000.append("td")
		// 	.text("2000")

		// row2006 = table.append("tr")
		// row2006.append("td")
		// 	.text("2006")

		// row2012 = table.append("tr")
		// row2012.append("td")
		// 	.text("2012")

		// row2013 = table.append("tr")
		// row2013.append("td")
		// 	.text("2013")

		containers.append("div")
			.attr("class", "footer")
			.text("The Urban Institute’s Housing Assistance Matters Initiative is funded by Housing Authority Insurance, Inc. (HAI, Inc.), to provide fact-based analysis about public and assisted housing. We are grateful to them and to all our funders, who make it possible for Urban to advance its mission.")
		containers.append("div")
			.attr("class","page-break")

	});
	
}
pymChild = new pym.Child({ renderCallback: drawGraphic, polling: 50});

